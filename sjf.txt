#include <stdio.h>

int main() 
{
      int n,art[n], bt[n], temp[n];
      //n is number of processes
      //art[i] is the arrival time of i-th process
      //bt[i] is the burst time of i-th process
      int i, smallest, count = 0, time;
      double wt = 0, tat = 0, end;
      // wt is waiting time , tat is turnaround time
      float awt, atat;
      // awt is average waiting time and atat is average turnaround time
      printf("\nEnter the Total Number of Processes:\t");
      scanf("%d", &n); 
      printf("\nEnter Details of %d Processes\n", n);
      for(i = 0; i < n; i++)
      {
            printf("\nEnter Arrival Time:\t");
            scanf("%d", &art[i]);
            printf("Enter Burst Time:\t");
            scanf("%d", &bt[i]); 
            temp[i] = bt[i];
            if(art[i]<0 || bt[i]<0)// time is always positive
            {
            	printf("ARRIVAL TIME OR BURST TIME CANT BE NEGATIVE\n");
            	return 0;
			}
      }  
      // checking arrival time are not same
      for (i=0;i<n;i++)
      {
      	int j=0;
      	for(j=0;j<n;j++)
      	{
		   if(j!=i)
		   {
		   	if(art[j]==art[i])
		   	{
			 printf("TWO PROCESSES CANNOT ARRIVE AT SAME TIME\n");
			 return 0;
			   }
			   
		  }
		}
	  }
      bt[9] = 9999;  
      for(time = 0; count != n; time++)
      {
            smallest = 9;
            for(i = 0; i < n; i++)
            {
                  if(art[i] <= time && bt[i] < bt[smallest] && bt[i] > 0)
                  {
                        smallest = i;
                  }
            }
            bt[smallest]--;
            if(bt[smallest] == 0)
            {
                  count++;
                  end = time + 1;
                  wt = wt + end - art[smallest] - temp[smallest];
                  tat = tat + end - art[smallest];
            }
      }
      awt = wt / n; 
      atat = tat / n;
      printf("\n\nAverage Waiting Time:\t%lf\n", awt);
      printf("Average Turnaround Time:\t%lf\n", atat);
      return 0;
}
